res.km2=kmeans(res.pca$ind$coord[,1:2],res.pca$ind$coord[init,1:2])
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],col=res.km2$cluster,
xlab="Dim 1",ylab="Dim 2",main="classification sur facteurs",
xlim=c(-4,5),ylim=c(-4,3.5))
###################
# C - Classification supervis?e
###################
load("seeds.RData")
library(FactoMineR)
res.pca=PCA(seeds,quali.sup=8,graph=FALSE)
FC1=res.pca$ind$coord[,1]
FC2=res.pca$ind$coord[,2]
df=data.frame(FC1,FC2,variety=as.factor(seeds$variety))
# Echantillons d'apprentissage et de test
set.seed(64)
n=dim(seeds)[1]
appr=sample(1:n,2*n/3)
test=-appr
table(df[appr,3])
table(df[test,3])
#-----------------------------------------------
# 1 lda
library(MASS)
ld=lda(variety~.,data=df[appr,])
ldpa= predict(ld)
mean(ldpa$class!=df[appr,3])
ldp=predict(ld,df[test,])
pred=ldp$class
mean(pred!=df[test,3])
table(test=df[test,3],pred)
plot(FC1,FC2,col=df[,3],pch=20)
points(FC1[test], FC2[test], col=pred,pch=2)
diff=((1:n)[test])[which(pred!=df[test,3])]
points(FC1[diff], FC2[diff],cex=2,col="blue",lwd=2)
# repr?sentation des zones de la r?gle de d?cision
x=rep(seq(-4,5,length.out=70),40)
y=rep(seq(-3,3,length.out=40),rep(70,40))
grille=data.frame(FC1=x,FC2=y)
predgrille=predict(ld,grille)$class
plotpred=function(pred,predgrille,title) {
err=mean(pred!=df[test,3])
plot(x,y,pch=15,col=c("light grey","pink","yellow")[predgrille])
title(     main=paste(title,", err=",round(100*err,1),"%"))
points(FC1,FC2,col=df[,3],pch=20)
points(FC1[test], FC2[test], col=pred,pch=2)
diff=((1:n)[test])[which(pred!=df[test,3])]
points(FC1[diff], FC2[diff],cex=2,col="blue",lwd=2)
err
}
plotpred(pred,predgrille,"lda")
#-----------------------------------------------
# knn
library(class)
knnp=knn(df[appr,1:2],df[test,1:2], df[appr,3])
knnpgrille=knn(df[appr,1:2],grille, df[appr,3])
plotpred(knnp,knnpgrille,"1nn")
#----------------------------------------------
# CART
library(rpart)
cart<-rpart(variety~.,df[appr,])
cartp<-predict(cart,df[test,],type="class")
cartpgrille<-predict(cart,grille,type="class")
par(mfrow=c(1,2))
plot(cart,margin=0.1,branch=0.5)
text(cart)
plotpred(cartp,cartpgrille,"cart")
abline(v=0.585,col="purple",lwd=2)
abline(v=-1.089,col="purple",lwd=2,lty=2)
segments(-1.089,-1.065,-4,-1.065,col="purple",lwd=2,lty=3)
par(mfrow=c(2,2))
plotpred(pred,predgrille,"lda")
plotpred(knnp,knnpgrille,"5nn")
plot(cart,margin=0.1,branch=0.5)
text(cart)
plotpred(cartp,cartpgrille,"cart")
abline(v=0.585,col="purple",lwd=2)
abline(v=-1.089,col="purple",lwd=2,lty=2)
segments(-1.089,-1.065,-4,-1.065,col="purple",lwd=2,lty=3)
# et avec toutes les variables
ld2=lda(variety~.,data=seeds[appr,])
ldp2=predict(ld2,seeds[test,])
pred2=ldp2$class
mean(pred2!=seeds[test,8])
table(test=seeds[test,8],pred2)
library(datasets)
str(mtcars)
shapiro.test(mtcars)
dataset<-cbind(mtcars$mpg,mtcars$am)
colnames(dataset)<-c("mpg","am")
summary(dataset[,1])
table(dataset[,2])
data<-list(Total=dataset[,1],Auto=dataset[dataset[,2]==0,1],Manual=dataset[dataset[,2]==1,1])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
```
chi test pour vérifier les hypotheses statistiques pas de rejet
```{r}
chisq.test(data$Manual)
chisq.test(data$Auto)
mean(data$Manual)
mean(data$Auto)
shapiro.test(mtcars$mpg)
mean(mtcars$mpg)
shapiro.test(mtcars$mpg,mean=20.09,sd=1)
shapiro.test(data$Auto)
shapiro.test(data$Manual)
shapiro.test(mtcars$mpg)
dataset<-cbind(mtcars$mpg,mtcars$am)
M<-dataset[dataset[,2] == 1,]
View(M)
A<-dataset[dataset[,2] == 0,]
colnames(M)<-c("mpg","am")
colnames(A)<-c("mpg","am")
par(mfrow=c(2,1))
boxplot(mpg ~ am, data=dataset,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue",horizontal=TRUE)
abline(h=mean(M),col = "lightgray", lty = 3)
plot(density(M[,1]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatique ")
lines(density(A[,1]), lwd=2,col="deepskyblue4")
tapply(dataset[,1], dataset[,2], mean)
tapply(dataset[,1], dataset[,2], var)
tapply(dataset[,1], dataset[,2], sd)
data(mtcars)
require(stats)
require(graphics)
pairs(mtcar, panel = panel.smooth, main = "mtcars data", col = 3 + (mtcars$am == 1)+(mtcars$am == 0))
pairs(mtcars, panel = panel.smooth, main = "mtcars data", col = 3 + (mtcars$am == 1)+(mtcars$am == 0))
View(mtcars)
la suite
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatique", "manuel"))
table(mtcars$am)
View(mtcars)
shapiro.test(mtcars[mtcars[,am]==automatique,mpg])
shapiro.test(mtcars[mtcars[,am]==automatique,1])
shapiro.test(mtcars[mtcars[,9]==automatique,1])
shapiro.test(mtcars[mtcars[,9]=="automatique",1])
shapiro.test(mtcars[mtcars[,"am"]=="automatique",1])
shapiro.test(mtcars[mtcars[,"am"]=="automatique","mpg"])
shapiro.test(mtcars[mtcars[,"am"]=="manuel","mpg"])
shapiro.test(mtcars$mpg)
###Dépendent variables mpg
M<-dataset[dataset[,2] == 1,]
A<-dataset[dataset[,2] == 0,]
colnames(M)<-c("mpg","am")
colnames(A)<-c("mpg","am")
par(mfrow=c(2,1))
boxplot(mpg ~ am, data=dataset,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue",horizontal=TRUE)
dataset<-cbind(mtcars$mpg,mtcars$am)
colnames(dataset)<-c("mpg","am")
summary(dataset[,1])
table(dataset[,2])
data<-list(Total=dataset[,1],Auto=dataset[dataset[,2]==0,1],Manual=dataset[dataset[,2]==1,1])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
```
chi test pour vérifier les hypotheses statistiques pas de rejet
```{r}
mean(data$Manual)
mean(data$Auto)
M<-dataset[dataset[,2] == 1,]
A<-dataset[dataset[,2] == 0,]
colnames(M)<-c("mpg","am")
colnames(A)<-c("mpg","am")
par(mfrow=c(2,1))
boxplot(mpg ~ am, data=dataset,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue",horizontal=TRUE)
abline(h=mean(M),col = "lightgray", lty = 3)
plot(density(M[,1]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatique ")
lines(density(A[,1]), lwd=2,col="deepskyblue4")
lines(density(A[, 1]),lwd=2,col="deepskyblue4")
View(A)
View(M)
View(dataset)
A<-dataset[dataset[,2] == 2,]
colnames(M)<-c("mpg","am")
colnames(A)<-c("mpg","am")
par(mfrow=c(2,1))
boxplot(mpg ~ am, data=dataset,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue",horizontal=TRUE)
abline(h=mean(M),col = "lightgray", lty = 3)
plot(density(M[,1]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatique ")
lines(density(A[, 1]),lwd=2,col="deepskyblue4")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatique ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
View(mtcars)
library(datasets)
str(mtcars)
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatic", "manuel"))
View(mtcars)
library(datasets)
str(mtcars)
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatic", "manuel"))
View(mtcars)
mean(mtcars$mpg)
shapiro.test(mtcars$mpg)
shapiro.test(mtcars[mtcars[,"am"]=="automatic","mpg"])
shapiro.test(mtcars[mtcars[,"am"]=="manuel","mpg"])
boxplot(mpg ~ am, data=mtcars,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue",horizontal=TRUE)
abline(h=mean(M),col = "lightgray", lty = 3)
boxplot(mpg ~ am, data=mtcars,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue",horizontal=FALSE)
abline(h=mean(M),col = "lightgray", lty = 3)
boxplot(mpg ~ am, data=mtcars,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue")
boxplot(mpg ~ am, data=mtcars,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue")
library(datasets)
str(mtcars)
view(mtcars)
mtcars
library(datasets)
str(mtcars)
mtcars
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatic", "manuel"))
mtcars
mean(mtcars$mpg)
shapiro.test(mtcars$mpg)
shapiro.test(mtcars[mtcars[,"am"]=="automatic","mpg"])
shapiro.test(mtcars[mtcars[,"am"]=="manuel","mpg"])
hist(mtcars[,"mpg"])
abline(density(mtcars[,"mpg"]))
hist(mtcars[,"mpg"], main="miles per gallons histogram")
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
boxplot(mpg ~ am, data=mtcars,
xlab="miles per miles", ylab="Manual/Automatic",
col="cornflowerblue", border="cornflowerblue")
abline(h=mean(M),col = "lightgray", lty = 3)
boxplot(mpg ~ am, data=mtcars,
xlab="auto/man", ylab="Miles per gallons",
col="cornflowerblue", border="cornflowerblue")
abline(h=mean(M),col = "lightgray", lty = 3)
boxplot(mpg ~ am, data=mtcars,
xlab="", ylab="Miles per gallons",
col="cornflowerblue", border="cornflowerblue")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
?matplot
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,4))
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,35))
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,4, legend=c(manual,automatic),title="Line types"))
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,4, legend=c("manual","automatic""),title="Line types"))
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,4, legend=c("manual","automatic"),title="Line types"))
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,4, legend=c("manual","automatic")))
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend(1,4, legend=c("manual","automatic")))
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ",legend("topright", legend=c("manual","automatic")))
plot(density(mtcars[mtcars[,"am"]=="manuel","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[,"mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="deepskyblue2")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
plot(density(mtcars[,"mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
mpg
plot(density(mtcars[,"mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
View(mtcars)
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
lines(density(mtcars[mtcars[,"am"]=="manuel","mpg"]),lwd=2,col="deepskyblue4")
library(datasets)
str(mtcars)
mtcars
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatic", "manual"))
View(mtcars)
mean(mtcars$mpg)
shapiro.test(mtcars$mpg)
shapiro.test(mtcars[mtcars[,"am"]=="automatic","mpg"])
shapiro.test(mtcars[mtcars[,"am"]=="manual","mpg"])
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
abline(density(mtcars[,"mpg"]))
lines(density(mtcars[,"mpg"]),lwd=2,col="red"")
abline(density(mtcars[,"mpg"]),lwd=2,col="red"")
line(density(mtcars[,"mpg"]),lwd=2,col="red"")
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
density(mtcars[,"mpg"])
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
line(density(mtcars[,"mpg"]))
z<-line(density(mtcars[,"mpg"]))
abline(coef(z))
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
z<-line(density(mtcars[,"mpg"]))
abline(coef(z))
abline(z)
z<-line(mtcars[,"mpg"])
abline(coef(z)
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
z<-line(mtcars[,"mpg"])
abline(coef(z))
z
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
density(mtcars[mtcars[,"am"]=="automatic","mpg"])
density(mtcars[mtcars[,"am"]=="automatic","mpg"]
density(mtcars[mtcars[,"am"]=="automatic","mpg"])
rm(list=objects())
graphics.off()
library(MASS)
head(genotype)
summary(genotype)
class(genotype$Litter)
class(genotype$Wt)
###################
# A - Variable qualitative
###################
# Resume
summary(genotype$Litter)
table(genotype$Litter)
###################
# Diagrammes en batons oma=c(bottom, left, top, right)
par(mfrow=c(1,2),oma=c(0,0,3,0))
Litter.table=table(genotype$Litter)
barplot(Litter.table,main="Portées",col=1:4)
Mother.table=table(genotype$Mother)
barplot(Mother.table,main="Méres",col=1:4)
title(main="Répartition des génotypes",outer=TRUE)
par(mfrow=c(1,1),oma=rep(0,4))
barplot(cbind(Litter.table,Mother.table),beside=TRUE,col=rainbow(4),
main="Répartition des génotypes",
legend.text=TRUE,args.legend=list(x="top",cex=0.7))
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions",legend.text=TRUE,args.legend=list(x="top",cex=0.7))
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions",legend.text=TRUE,args.legend=list(x="right",cex=0.1))
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
cor(x,y)
plot(lm(x,y)
plot(lm(x,y))
lm(x,y)
plot(x,y)
x1 <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y1 <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(x1,y1)
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue", border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
plot(density(mtcars[,"mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
par(mfrow=c(2,1))
boxplot(mpg ~ am, data=mtcars,
xlab="", ylab="Miles per gallons",
col="cornflowerblue", border="cornflowerblue")
abline(h=mean(M),col = "lightgray", lty = 3)
plot(density(mtcars[,"mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
#lines(density(mtcars[mtcars[,"am"]=="automatic","mpg"]),lwd=2,col="red"")
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
library(datasets)
str(mtcars)
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatic", "manual"))
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(0,50),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
par(mfrow=c(3,1))
hist(mtcars[,"mpg"], main="miles per gallons histogram",xlab="miles per gallons")
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(10,35),ylim=c(0,0.11), main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",col="cornflowerblue",horizontal=TRUE, border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(10,35),ylim=c(0,0.11),srt=90, main="Density Manual and Automatic ")
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(10,35),ylim=c(0,0.11),las=0, main="Density Manual and Automatic ")
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(10,35),ylim=c(0,0.11),las=1, main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
hist(mtcars[,"mpg"], main="miles per gallons histogram",las=1,xlab="miles per gallons")
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="automatic or manual transmission", ylab="miles per gallons",las=1,col="cornflowerblue",horizontal=TRUE, border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
par(mfrow=c(3,1))
hist(mtcars[,"mpg"], main="miles per gallons histogram",las=1,xlab="miles per gallons")
plot(density(mtcars[mtcars[,"am"]=="automatic","mpg"]), lwd=2,col="orange", xlim=c(10,35),ylim=c(0,0.11),las=1, main="Density Manual and Automatic ")
lines(density(mtcars[mtcars[,"am"]=="manual","mpg"]),lwd=2,col="deepskyblue4")
data<-list(Total=mtcars[,"mpg"],Auto=mtcars[mtcars[,"am"]=="automatic","mpg"],Manual=mtcars[mtcars[,"am"]=="manual","mpg"])
boxplot(data,xlab="miles per galon", ylab="",las=1,col="cornflowerblue",horizontal=TRUE, border="cornflowerblue", main="MPG difference between automatic and manual transmissions")
plot(mtcars$wt~mtcars$mpg)
plot(mtcars$wt~mtcars$mpg+mtcars$cyl+mtcars$am)
plot(wt~mpg+cyl+am,data=mtcars)
plot(mpg~wt+cyl+am,data=mtcars)
reg <- lm(mpg~.,data=mtcars)
summary(reg)
plot(reg)
names(res)
res <- lm(mpg~.,data=mtcars)
names(res)
coef(res)
res(res)
res$residu
res$residuals
res$effects
res$rank
res$fitted.values
res$qr
res <- lm(mpg~.,data=mtcars)
coef(res)
res
lm(mpg~.,data=mtcars)
res <- lm(mpg~.,data=mtcars)
summary(res)
coef(res)
step(res,direction=both)
step(res,direction="both")
res<-step(res,direction="both")
names(res)
res<-step(res,direction="both")
coef(res)
res<-step(res,direction="both")
res
reg<-step(res,direction="both")
reg
regression<-step(res,direction="both")
regression
regression<-step(res,direction="both")
names(regression)
model(regression)
regression$model
regression$formula
regression$terms
regression$call
```
##Appendix
```{r}
regression$call
regression<-step(lm(mpg~.,data=mtcars),direction="both",steps=1)
regression<-step(lm(mpg~.,data=mtcars),direction="both")
regression$call
regression$anova
result<-lm(formula = mpg ~ am + qsec + wt, data = mtcars)
coef(result)
summary(result)
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt+qsec | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt+cyl | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt+am | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(cyl)+am, data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am)+cyl, data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt | as.factor(am)+as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt+as.factor(cyl) | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ wt+cyl | as.factor(am), data = mtcars,
panel = panel.smooth, rows = 1)
lm(mpg~am+qsec+wt,data=mtcars)
res_final<-lm(mpg~am+qsec+wt,data=mtcars)
plot(res_final)
par(mfcol=c(2,2))
res_final<-lm(mpg~am+qsec+wt,data=mtcars)
plot(res_final)
summary(res_final)
names(res_final)
coef(res_final)
res_final$effects
res_final$fitted_values
res_final$assign
res_final$qr
res_final$terms
res_final$model
load("seeds.RData")
head(seeds)
seeds=seeds[,-8]
d=dist(seeds[1:8,])
d
L1=t(seeds[1,])
L2=t(seeds[2,])
L1
L2
as.matrix(d)
r <- cor(*, data=mtcars,use = "all.obs")
r <- cor(mtcars, data=mtcars,use = "all.obs")
r <- cor(mtcars,use = "all.obs")
r
mtcars<-data(mtcars)
r <- cor(mtcars,use = "all.obs")
library(datasets)
mtcars$am <- factor(mtcars$am, levels=c(0, 1),labels=c("automatic", "manual"))
res <- lm(mpg~.,data=mtcars)
coef(res)
regression<-step(lm(mpg~.,data=mtcars),direction="both")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(BiocInstaller)
biocVersion
biocVersion()
biocValid
setwd("~/GitHub/datasciencecoursera/MachineLearning")
setwd("~/GitHub/datasciencecoursera/MachineLearning/Pratical-Machine-Learning-gh-pages")
